@model Barabas.Models.Event
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Event</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input type="file" asp-for="Image" class="form-control" id="ImageFile" name="ImageFile" accept="image/*" />
                <span asp-validation-for="Image" class="text-danger"></span>
                <small class="form-text text-muted">Allowed formats: jpg, jpeg, png, gif. Max size: 2 MB.</small>
            </div>

            <div class="form-group mt-2">
                <img id="previewImage" src="#" alt="Preview" style="max-width: 300px; display: none;" class="img-thumbnail" />
            </div>


            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="TicketCount">Number of Tickets</label>
                <input type="number" id="TicketCount" name="TicketCount" class="form-control" min="1" />
            </div>

            <div class="form-group">
                <label asp-for="EventCategoryId" class="control-label"></label>
                <select asp-for="EventCategoryId" class="form-control"
                        asp-items="@(new SelectList(ViewBag.EventCategories, "Id", "Name"))">
                    <option value="">-- Select category --</option>
                </select>
                <span asp-validation-for="EventCategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const imageInput = document.getElementById('ImageFile');
        const preview = document.getElementById('previewImage');
        const form = document.getElementById('createEventForm');

        imageInput.addEventListener('change', function () {
            const file = this.files[0];
            if (file) {
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
                const maxSize = 2 * 1024 * 1024; 

                if (!allowedTypes.includes(file.type)) {
                    alert("Invalid file type. Only jpg, jpeg, png, gif are allowed.");
                    this.value = '';
                    preview.style.display = 'none';
                    return;
                }

                if (file.size > maxSize) {
                    alert("File is too large. Maximum allowed size is 2 MB.");
                    this.value = '';
                    preview.style.display = 'none';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }
                reader.readAsDataURL(file);
            } else {
                preview.src = '#';
                preview.style.display = 'none';
            }
        });

        form.addEventListener('submit', function (e) {
            const file = imageInput.files[0];
            if (file) {
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
                const maxSize = 2 * 1024 * 1024;

                if (!allowedTypes.includes(file.type) || file.size > maxSize) {
                    e.preventDefault();
                    alert("Please select a valid image file before submitting.");
                }
            }
        });
    </script>
}